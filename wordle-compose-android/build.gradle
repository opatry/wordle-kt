/*
 * Copyright (c) 2022 Olivier Patry
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

def compose_version = '1.2.0'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId 'net.opatry.games.wordle'
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName '0.1.0'

        resConfigs 'en', 'fr'
    }

    signingConfigs {
        dev {
            storeFile file('dev.keystore')
            storePassword 'devdev'
            keyAlias 'dev'
            keyPassword 'devdev'
        }
        prod {
            def keystoreFilePath = findProperty('playstore.keystore.file') ?: null
            storeFile = keystoreFilePath ? file(keystoreFilePath) : null
            storePassword = findProperty('playstore.keystore.password')
            keyAlias = 'wordle_compose_android'
            keyPassword = findProperty('playstore.keystore.key_password')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.dev
        }
        release {
            // we allow dev signing config in release build when not in CI to allow release builds on dev machine
            def ciBuild = findProperty('ci') ?: false
            if (signingConfigs.prod.storeFile == null && !ciBuild) {
                signingConfig signingConfigs.dev
            } else {
                signingConfig signingConfigs.prod
            }

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lint {
        checkDependencies true
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'androidx.appcompat:appcompat:1.4.1'

    implementation "androidx.compose.ui:ui:${compose_version}"
    implementation "androidx.compose.ui:ui-tooling:${compose_version}"
    implementation "androidx.compose.foundation:foundation:${compose_version}"
    implementation "androidx.compose.material:material:${compose_version}"
    implementation 'androidx.activity:activity-compose:1.4.0'

    implementation 'com.google.accompanist:accompanist-insets:0.25.1'

    implementation project(':word-data')
    implementation project(':game-logic')
}
