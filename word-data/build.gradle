plugins {
    id 'java-library'
    id 'kotlin'
}

abstract class DictionariesKtTask extends DefaultTask {

    DictionariesKtTask() {
        group = 'Generator'
        description = 'Generates the list available dictionaries from dictionary files found in resources to ease runtime lookup of built-in dictionaries.'
    }

    @Input
    abstract String packageName

    @InputFiles
    @PathSensitive(PathSensitivity.ABSOLUTE)
    // TODO we should consider all (active) sourceSets
    FileCollection resources = project.files(project.sourceSets.main.resources).filter {
        it.name =~ ~/words_[a-z]{2}_[\d]+\.txt/
    }

    @OutputDirectory
    Directory outputDir = project.layout.buildDirectory.dir("generated-sources/dictionariesKt").get()

    private File genDir = outputDir.asFile

    @TaskAction
    def execute() {
        def dictionaryResourceNames = []
        // FIXME relative to depends on each file source dir
        def resourcesDir = project.file('src/main/resources')
        resources.files.forEach { file ->
            // TODO File.relativeTo like in Kotlin
            dictionaryResourceNames += file.absolutePath.minus(resourcesDir.absolutePath)
        }
        generateDictionariesFile(dictionaryResourceNames)
    }

    private def generateDictionariesFile(List<String> dictionaryResourceNames) {
        def packageDir = new File(genDir, packageName.replace('.', '/'))
        packageDir.mkdirs()
        def outputFile = new File(packageDir, 'Dictionaries.kt')
        outputFile.withWriter {
            it.append('// AUTO-GENERATED FILE. DO NOT MODIFY.\n')
            it.append('// \n')
            it.append('// This class was automatically generated by a\n')
            it.append('// gradle task from the resource data it found.\n')
            it.append('// It should not be modified by hand.\n')
            it.append('// \n')
            it.append('// ' + new Date() + '\n')
            it.append('package ' + packageName + '\n')
            it.append('\n\n')
            it.append('val allDictionaries = arrayOf(\n')
            dictionaryResourceNames.forEach { resourceName ->
                def (_, language, wordSize) = (resourceName =~ ~/words_([a-z]{2})_([\d]+)\.txt/)[0]
                it.append('\tDictionary(language = "' + language + '", wordSize = ' + wordSize + ', resourceName = "' + resourceName + '"),\n')
            }
            it.append(')\n')
        }
    }
}

def generateDictionariesKt = tasks.register("generateDictionariesKt", DictionariesKtTask) {
    packageName = "net.opatry.game.wordle"
}

sourceSets {
    main {
        java {
            srcDir(generateDictionariesKt)
        }
    }
}
